# .github/workflows/build-deploy-dev.yaml
name: Build and Deploy (Dev)

on:
  push:
    branches: [ main ] # Or a 'dev' branch
  workflow_dispatch: # Allow manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      backend_image: ${{ steps.docker_build_backend.outputs.image }}
      # Add frontend image output later
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub # Or your container registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Backend image
      id: docker_build_backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: yourdockerhubuser/pacs-backend:${{ github.sha }} # Use git sha for unique tag
        outputs: type=image,name=yourdockerhubuser/pacs-backend,push=true

    # Add steps to build frontend image later - need to build helm chart to be pulled into the cluster

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     environment: development # Set up a GitHub Environment for secrets/approvals

#     steps:
#     - uses: actions/checkout@v3

#     - name: Set up Helm
#       uses: azure/setup-helm@v3
#       with:
#         version: v3.x # Specify Helm version

#     - name: Configure Kubeconfig # Use secrets for cluster credentials
#       run: |
#         mkdir -p $HOME/.kube
#         echo "${{ secrets.KUBECONFIG_DEV }}" > $HOME/.kube/config
#         chmod 600 $HOME/.kube/config

#     - name: Deploy using Helm
#       run: |
#         helm upgrade --install pacs-app ./infrastructure/helm/pacs-app \
#           --namespace pacs-dev \
#           --create-namespace \
#           --set backend.image.repository=yourdockerhubuser/pacs-backend \
#           --set backend.image.tag=${{ github.sha }} \
#           # Add other necessary values overrides
#           # --set orthanc.persistence.enabled=true # Example